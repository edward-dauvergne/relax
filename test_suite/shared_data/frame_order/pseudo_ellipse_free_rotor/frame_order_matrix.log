


                                     relax repository checkout

                              Molecular dynamics by NMR data analysis

                             Copyright (C) 2001-2006 Edward d'Auvergne
                         Copyright (C) 2006-2011 the relax development team

This is free software which you are welcome to modify and redistribute under the conditions of the
GNU General Public License (GPL).  This program, including all modules, is licensed under the GPL
and comes with absolutely no warranty.  For details type 'GPL' within the relax prompt.

Assistance in using the relax prompt and scripting interface can be accessed by typing 'help' within
the prompt.

Processor fabric:  Uni-processor.

script = 'frame_order_matrix.py'
----------------------------------------------------------------------------------------------------
from numpy import array, float64, zeros

from generic_fns.frame_order import print_frame_order_2nd_degree
from maths_fns.kronecker_product import kron_prod


# Store the rotation matrices.
R = []
execfile('rotation_matrices.py')
R = array(R)

# Init the frame order matrix.
daeg = zeros((9, 9), float64)

# Loop over the structures, and build the frame order matrix.
for i in range(len(R)):
    # Kronecker product.
    kron = kron_prod(R[i], R[i])

    # Sum
    daeg += kron

# Average.
daeg = daeg / len(R)

# The relax calculated matrix.
fo_calc = array(
        [[    0.3410,   -0.0370,    0.0333,   -0.0370,    0.3252,    0.0411,    0.0333,    0.0411,    0.3338],
         [   -0.0322,    0.3148,    0.0367,   -0.0035,    0.0343,   -0.3163,   -0.3170,   -0.0302,   -0.0021],
         [    0.0264,    0.0490,    0.3115,   -0.3046,   -0.0282,   -0.0166,   -0.0813,    0.3011,    0.0017],
         [   -0.0322,   -0.0035,   -0.3170,    0.3148,    0.0343,   -0.0302,    0.0367,   -0.3163,   -0.0021],
         [    0.3272,    0.0296,   -0.0266,    0.0296,    0.3399,   -0.0329,   -0.0266,   -0.0329,    0.3329],
         [    0.0327,   -0.3010,   -0.0166,   -0.0150,   -0.0349,    0.3044,    0.3011,    0.0474,    0.0022],
         [    0.0264,   -0.3046,   -0.0813,    0.0490,   -0.0282,    0.3011,    0.3115,   -0.0166,    0.0017],
         [    0.0327,   -0.0150,    0.3011,   -0.3010,   -0.0349,    0.0474,   -0.0166,    0.3044,    0.0022],
         [    0.3318,    0.0074,   -0.0067,    0.0074,    0.3350,   -0.0082,   -0.0067,   -0.0082,    0.3332]], float64)

# Print outs.
print_frame_order_2nd_degree(daeg)
print_frame_order_2nd_degree(fo_calc)
print_frame_order_2nd_degree(daeg - fo_calc)
----------------------------------------------------------------------------------------------------

Frame Order matrix, 2nd degree:
[[    0.3411,   -0.0381,    0.0320,   -0.0381,    0.3255,    0.0409,    0.0320,    0.0409,    0.3333],
 [   -0.0308,    0.3143,    0.0380,   -0.0034,    0.0333,   -0.3169,   -0.3168,   -0.0318,   -0.0025],
 [    0.0272,    0.0482,    0.3111,   -0.3045,   -0.0279,   -0.0177,   -0.0812,    0.3015,    0.0007],
 [   -0.0308,   -0.0034,   -0.3168,    0.3143,    0.0333,   -0.0318,    0.0380,   -0.3169,   -0.0025],
 [    0.3276,    0.0312,   -0.0262,    0.0312,    0.3388,   -0.0317,   -0.0262,   -0.0317,    0.3336],
 [    0.0328,   -0.3015,   -0.0156,   -0.0142,   -0.0361,    0.3036,    0.3014,    0.0470,    0.0033],
 [    0.0272,   -0.3045,   -0.0812,    0.0482,   -0.0279,    0.3015,    0.3111,   -0.0177,    0.0007],
 [    0.0328,   -0.0142,    0.3014,   -0.3015,   -0.0361,    0.0470,   -0.0156,    0.3036,    0.0033],
 [    0.3313,    0.0069,   -0.0059,    0.0069,    0.3356,   -0.0092,   -0.0059,   -0.0092,    0.3331]]

Frame Order matrix, 2nd degree:
[[    0.3410,   -0.0370,    0.0333,   -0.0370,    0.3252,    0.0411,    0.0333,    0.0411,    0.3338],
 [   -0.0322,    0.3148,    0.0367,   -0.0035,    0.0343,   -0.3163,   -0.3170,   -0.0302,   -0.0021],
 [    0.0264,    0.0490,    0.3115,   -0.3046,   -0.0282,   -0.0166,   -0.0813,    0.3011,    0.0017],
 [   -0.0322,   -0.0035,   -0.3170,    0.3148,    0.0343,   -0.0302,    0.0367,   -0.3163,   -0.0021],
 [    0.3272,    0.0296,   -0.0266,    0.0296,    0.3399,   -0.0329,   -0.0266,   -0.0329,    0.3329],
 [    0.0327,   -0.3010,   -0.0166,   -0.0150,   -0.0349,    0.3044,    0.3011,    0.0474,    0.0022],
 [    0.0264,   -0.3046,   -0.0813,    0.0490,   -0.0282,    0.3011,    0.3115,   -0.0166,    0.0017],
 [    0.0327,   -0.0150,    0.3011,   -0.3010,   -0.0349,    0.0474,   -0.0166,    0.3044,    0.0022],
 [    0.3318,    0.0074,   -0.0067,    0.0074,    0.3350,   -0.0082,   -0.0067,   -0.0082,    0.3332]]

Frame Order matrix, 2nd degree:
[[    0.0001,   -0.0011,   -0.0013,   -0.0011,    0.0003,   -0.0002,   -0.0013,   -0.0002,   -0.0005],
 [    0.0014,   -0.0005,    0.0013,    0.0001,   -0.0010,   -0.0006,    0.0002,   -0.0016,   -0.0004],
 [    0.0008,   -0.0008,   -0.0004,    0.0001,    0.0003,   -0.0011,    0.0001,    0.0004,   -0.0010],
 [    0.0014,    0.0001,    0.0002,   -0.0005,   -0.0010,   -0.0016,    0.0013,   -0.0006,   -0.0004],
 [    0.0004,    0.0016,    0.0004,    0.0016,   -0.0011,    0.0012,    0.0004,    0.0012,    0.0007],
 [    0.0001,   -0.0005,    0.0010,    0.0008,   -0.0012,   -0.0008,    0.0003,   -0.0004,    0.0011],
 [    0.0008,    0.0001,    0.0001,   -0.0008,    0.0003,    0.0004,   -0.0004,   -0.0011,   -0.0010],
 [    0.0001,    0.0008,    0.0003,   -0.0005,   -0.0012,   -0.0004,    0.0010,   -0.0008,    0.0011],
 [   -0.0005,   -0.0005,    0.0008,   -0.0005,    0.0006,   -0.0010,    0.0008,   -0.0010,   -0.0001]]

