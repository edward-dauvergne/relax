


                                  relax repository checkout r23353
                    svn+ssh://svn.gna.org/svn/relax/branches/frame_order_cleanup

                              Molecular dynamics by NMR data analysis

                             Copyright (C) 2001-2006 Edward d'Auvergne
                         Copyright (C) 2006-2014 the relax development team

This is free software which you are welcome to modify and redistribute under the conditions of the
GNU General Public License (GPL).  This program, including all modules, is licensed under the GPL
and comes with absolutely no warranty.  For details type 'GPL' within the relax prompt.

Assistance in using the relax prompt and scripting interface can be accessed by typing 'help' within
the prompt.

Processor fabric:  Uni-processor.

script = 'superimpose.py'
----------------------------------------------------------------------------------------------------
# Script for superimposing the C-domain structures to convert the pivoted rotation to a translation + CoM rotation.

# Create a data pipe.
pipe.create('superimpose', 'N-state')

# Load the two structures.
structure.read_pdb('1J7P_1st_NH.pdb', set_mol_name='C-dom', set_model_num=1)
structure.read_pdb('1J7P_1st_NH_rot.pdb', set_mol_name='C-dom', set_model_num=2)

# Delete the calciums to match the data pipe CoM (from only 15N and 1H spins).
structure.delete(atom_id='@CA')

# Superimpose.
structure.superimpose(method='fit to first', centre_type='CoM')

# Save the result.
structure.write_pdb('superimpose.pdb', force=True)
----------------------------------------------------------------------------------------------------

relax> pipe.create(pipe_name='superimpose', pipe_type='N-state', bundle=None)

relax> structure.read_pdb(file='1J7P_1st_NH.pdb', dir=None, read_mol=None, set_mol_name='C-dom', read_model=None, set_model_num=1, alt_loc=None, verbosity=1, merge=False)

Internal relax PDB parser.
Opening the file '1J7P_1st_NH.pdb' for reading.
Adding molecule 'C-dom' to model 1 (from the original molecule number 1 of model None)

relax> structure.read_pdb(file='1J7P_1st_NH_rot.pdb', dir=None, read_mol=None, set_mol_name='C-dom', read_model=None, set_model_num=2, alt_loc=None, verbosity=1, merge=False)

Internal relax PDB parser.
Opening the file '1J7P_1st_NH_rot.pdb' for reading.
Adding molecule 'C-dom' to model 2 (from the original molecule number 1 of model None)

relax> structure.delete(atom_id='@CA', verbosity=1, spin_info=True)
Deleting structural data from the current pipe.
Deleting all spin specific structural info.
Deleting all interatomic vectors.

relax> structure.superimpose(models=None, method='fit to first', atom_id=None, centre_type='CoM', centroid=None)
Validating models:
	All models are consistent

Superimposition of structural models [1, 2] using the 'fit to first' algorithm.
Calculating the centre of mass.
    Total mass:      M = 1004.9729400000001
    Centre of mass:  R = array([ 47.63725241103505 ,  -9.48986557536564 ,  30.825358289766502])
Calculating the centre of mass.
    Total mass:      M = 1004.9729400000001
    Centre of mass:  R = array([ 26.7775022253435  , -11.940472562813483,  28.633503719413586])


Calculating the rotational and translational displacements from model 1 to model 2 using the Kabsch algorithm.

Start CoM:               [  47.637252411035050,   -9.489865575365640,   30.825358289766502]
End CoM:                 [  26.777502225343500,  -11.940472562813483,   28.633503719413586]
Translation vector:      [ -20.859750185691549,   -2.450606987447843,   -2.191854570352916]
Translation distance:    21.117264947761672
Rotation matrix:
   [[  -0.313343136727067,    0.937381687553936,    0.152090928409876]
    [  -0.889228712298167,   -0.233411620017465,   -0.393435271506466]
    [  -0.333299228757862,   -0.258523862495048,    0.906684640120288]]
Rotation axis:           [   0.071200441865536,    0.256168058141030,   -0.964006443477639]
Rotation euler angles:   [   5.623468683852550,    0.435439748282942,    5.081265879629926]
Rotation angle (deg):    108.665045075655243

relax> structure.write_pdb(file='superimpose.pdb', dir=None, model_num=None, compress_type=0, force=True)
Opening the file 'superimpose.pdb' for writing.

Creating the PDB records

REMARK
HET
HETNAM
FORMUL

MODEL 1
ATOM, HETATM, TER
ENDMDL

MODEL 2
ATOM, HETATM, TER
ENDMDL
CONECT

MASTER
END

